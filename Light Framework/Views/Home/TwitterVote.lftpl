<?php
    $this->ViewBag['title'] = "Twitter Vote";
?>

<p class="lead">Do you prefer <?=$model->item1;?> or <?=$model->item2;?>?</p>
<p>Tweet your answer &quot;<?=$model->item1;?>&quot; or &quot;<?=$model->item2;?>&quot;, including the <strong>#waterstonshackday</strong> tag to be counted.</p>
<button id="startVote" class="btn btn-primary btn-large">Start Vote</button>
<div id="countdown"></div>
<div id="voteResults"></div>


<!--SECTION Scripts-->
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.js"></script>
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.binding.js"></script>
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.time.js"></script>
<script src="http://cdn.jsdelivr.net/rxjs-dom/2.0.3/rx.dom.js"></script> 
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.async.js"></script>
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.jquery.js"></script>
<script>
    $(function () {
        var item1 = 0,
            item2 = 0,
            item1name = "<?=$model->item1;?>",
            item2name = "<?=$model->item2;?>";
        
        var lastTime =
        $("#startVote").click(startCountdown);
        function startCountdown() {
            item1 = 0;
            item1 = 0;
            var currentTime = 45;
            var twt = searchTwitter('#waterstonshackday');
            twt.subscribe(setLastTime, function (e) { console.log(e); });
            performCountdown();
            function performCountdown() {
                $("#countdown").text(currentTime);
                if (currentTime != 0) {
                    currentTime--;
                    var timeout = setTimeout(performCountdown, 1000);
                    if (currentTime % 10 === 0) {
                        displayResults(false);
                    }
                }
                else {
                    clearTimeout(timeout);
                    setTimeout(displayResults, 10000, true);
                    $("#countdown").text("Finalising Results...");
                }
            }
        }

        function displayResults(finished) {
            var twt = searchTwitter('#waterstonshackday');
            twt.subscribe(function (data) {
                countTweets(data, function () {
                    var resultsString = "<div>" + item1name.toUpperCase() + ": " + item1 + "</div><div>" + item2name.toUpperCase() + ": " + item2 + "</div>";
                    if (finished) {
                        if (item1 > item2) {
                            resultsString += "<div>" + item1name.toUpperCase() + " WIN!!!</div>";
                        }
                        else if (item1 < item2) {
                            resultsString += "<div>" + item2name.toUpperCase() + " WIN!!!</div>";
                        }
                        else {
                            resultsString += "<div>It's a Tie!!!</div>";
                        }
                    }
                    $('#voteResults').html(resultsString)
                });

            }, function (e) { console.log(e); });
        }

        function setLastTime(data) {
            if (data.statuses.length > 0) {
                lastTime = new Date(data.statuses[0].created_at);
            }
        }

        function countTweets(data, callback) {
            $(data.statuses).each(function (key, value) {
                if (new Date(value.created_at) > lastTime) {
                    if (value.text.toLowerCase().indexOf(item1name.toLowerCase()) !== -1) {
                        item1++;
                    }
                    if (value.text.toLowerCase().indexOf(item2name.toLowerCase()) !== -1) {
                        item2++;
                    }
                }
                if (key == data.statuses.length - 1) {
                    setLastTime(data);
                    if (typeof (callback) !== 'undefined') {
                        callback();
                    }
                }
            });
            console.log(item1name + ': ' + item1, item2name + ': ' + item2);
        }

        function searchTwitter(term) {
            var promise = $.ajax({
                url: '/Scripts/TwitterSearch.php',
                method: 'post',
                dataType: 'json',
                data: 'q=' + encodeURIComponent(term)
            }).promise();
            return Rx.Observable.fromPromise(promise);
        }
    });
</script>
<!--ENDSECTION-->