<?php
    $this->ViewBag['title'] = "Twitter Vote";
?>

<p class="lead">Do you prefer <?=join(' or ', array_filter(array_merge(array(join(', ', array_slice($model->items, 0, -1))), array_slice($model->items, -1))));?>?</p>
<p>Tweet your answer &quot;<?=join('&quot; or &quot;', array_filter(array_merge(array(join('&quot;, &quot;', array_slice($model->items, 0, -1))), array_slice($model->items, -1))));?>&quot;, including the <strong>#waterstonshackday</strong> tag to be counted.</p>
<button id="startVote" class="btn btn-primary btn-large">Start Vote</button>
<div id="countdown"></div>
<div id="voteResults"></div>


<!--SECTION Scripts-->
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.js"></script>
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.binding.js"></script>
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.time.js"></script>
<script src="http://cdn.jsdelivr.net/rxjs-dom/2.0.3/rx.dom.js"></script> 
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.async.js"></script>
<script type="text/javascript" src="<?=$this->HtmlHelper->SiteRoot();?>/Scripts/rx.jquery.js"></script>
<script>
    $(function () {
        var item = new Array();
        <?
            foreach($model->items as $item)
            {
                echo "item.push(['" . $item . "', 0]);";
            }
        ?>
        
        var lastTime;
        $("#startVote").click(startCountdown);
        function startCountdown() {
            $('#voteResults').html('');
            $(item).each(function(key, value) {
                item[key][1] = 0;
            });
            var currentTime = 45;
            var twt = searchTwitter('#waterstonshackday');
            twt.subscribe(setLastTime, function (e) { console.log(e); });
            performCountdown();
            function performCountdown() {
                $("#countdown").text(currentTime);
                if (currentTime != 0) {
                    currentTime--;
                    var timeout = setTimeout(performCountdown, 1000);
                    if (currentTime % 5 === 0) {
                        displayResults(false);
                    }
                }
                else {
                    clearTimeout(timeout);
                    setTimeout(displayResults, 10000, true);
                    $("#countdown").text("Finalising Results...");
                }
            }
        }

        function displayResults(finished) {
            var twt = searchTwitter('#waterstonshackday');
            twt.subscribe(function (data) {
                countTweets(data, function () {
                    var resultsString = "";
                    console.log(item);
                    $(item).each(function(key, value) {
                        resultsString += "<div>" + value[0].toUpperCase() + ": " + value[1] + "</div>";
                    });
                    if (finished) {
                        var winning = "";
                        var highest = 0;
                        $(item).each(function(key, value) {
                            if(value[1] > highest) {
                                highest = value[1];
                                winning = value[0];
                            }
                            else if(value[1] === highest) {
                                winning = "";
                            }
                        });
                        if(winning === "") {
                            resultsString += "<div>IT IS A TIE!</div>";
                        }
                        else {
                            resultsString += "<div>" + winning.toUpperCase() + " WIN!</div>";
                        }
                        $('#countdown').text('');
                    }
                    $('#voteResults').html(resultsString);                    
                });

            }, function (e) { console.log(e); });
        }

        function setLastTime(data) {
            if (data.statuses.length > 0) {
                lastTime = new Date(data.statuses[0].created_at);
            }
        }

        function countTweets(data, callback) {
            $(data.statuses).each(function (key, value) {
                if (new Date(value.created_at) > lastTime) {
                    $(item).each(function (itemkey, itemvalue) {
                        if (value.text.toLowerCase().indexOf(itemvalue[0].toLowerCase()) !== -1) {
                            item[itemkey][1]++;
                        }
                    });
                }
            });
            setLastTime(data);
            if (typeof (callback) !== 'undefined') {
                callback();
            }
        }

        function searchTwitter(term) {
            var promise = $.ajax({
                url: '/Scripts/TwitterSearch.php',
                method: 'post',
                dataType: 'json',
                data: 'q=' + encodeURIComponent(term)
            }).promise();
            return Rx.Observable.fromPromise(promise);
        }
    });
</script>
<!--ENDSECTION-->